# @package _global_

# to execute this experiment run:
# python run.py experiment=wikiann_zs

defaults:
  - override /trainer: default.yaml # choose trainer from 'configs/trainer/'
  - override /module: token_classification.yaml
  - override /datamodule: wikiann_bi_avg.yaml
  - override /callbacks: null
  - override /config_callbacks: trident.yaml
  - override /logger: wandb.yaml

seed: 42
shots: ???
strategy: avgall
data_seed: ???
lang: ???
test_after_training: true
train: true

module:
  _target_: src.projects.fsxlt_avg.module.MultiTaskTokenClassification
  avg_ckpts: '${hydra:runtime.output_dir}/checkpoints/'
  module_cfg:
    weights_from_checkpoint:
      ckpt_path: "./logs/fsxlt/wikiann/zs/seed-42_lr-2e-05/checkpoints/9-6250.ckpt"

trainer:
  max_epochs: 10
  gpus: 1
  num_sanity_val_steps: 0
  deterministic: true
  precision: 16

logger:
  wandb:
    project: "wikiann-bi-avg"
    name: "lang=${lang}_strategy=${strategy}_shots=${shots}_seed=${seed}_dataseed=${data_seed}_lr=${module.optimizer.lr}_epochs=${trainer.max_epochs}"

callbacks:
  model_checkpoint_on_epoch:
    _target_: pytorch_lightning.callbacks.ModelCheckpoint
    monitor: null # name of the logged metric which determines when model is improving
    mode: "max" # can be "max" or "min"
    every_n_epochs: 1 # truncated length of MNLI train / 16
    verbose: true
    save_top_k: -1 # -1 -> all models are saved
    save_last: false # additionaly always save model from last epoch
    save_weights_only: true
    dirpath: "${hydra:runtime.output_dir}/checkpoints/"
    auto_insert_metric_name: false
